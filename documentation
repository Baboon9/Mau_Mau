Initial entry:
	I have stopped working on my MADN Project because it went over my head.
	It was just too complex for a beginner Project, so I started a basic and simple one.
	The most simple I could come up with was Mau Mau, so here I am.
	
	I wanted to build it up from the ground and so I thougt best would be to start with the data structures.

	Mau mau has a deck of cards, 2 players with and cards, one human and one PC player. And one deck for cards that have been put down.

	A deck contains cards with numbers from 2 to 10, and in order jack, queen, king, ace, as well as 4 different colors, namely cross, heart, spades, clubs.

	These cards need to be mixed and sorted into the deck. These cards are 8+4*4, so 32 in total. 

	The Handcards are to be handed out as 7 each player.

Second entry:
	Okay, so the whole thing is running just fine, but it is not clean code, I want to polish it a litte by applying the MVC pattern to it and add a GUI Later.
	It would be pretty amazing to have a networking function as well later on. But who knows.
		To Make it more polished I need to make the folders, add the __init__.py files, put the classes in their files and untie the knot a little
	by adding moving some functions in their appropriat modules.

Third entry:
	Now, I have been trying to implement a design pattern, called the MCV-Pattern plus the Observer AND the singleton Pattern.
	That is a lot of patterns but I am not sure weather these whole pattern stuff isn't actually making a simple thing more complicated!
	But, as always, you learn by making mistakes right? So I am about to review the whole thing later with an old friend of mine that is
	way more completent with design patterns and he will give me some hints about what I did wrong. My code is a car wreck right now..
	Anyway it is better then before, because I did some better OOP standards in python i've been learning about.
	Next time, I will make a more reasonable planning for my OOP-Design with a usefull Diagram, not just the structures, 
	but the connections and relations!
		So what am I doing today with this repo? It is still missing an useful GUI which I have been scetching already,
	Now it is time to get my hands dirty with some TKinter stuff, I already have a headach but still, it needs to be done.


Forth entry:
	I tried to build the MVC Pattern, but I got distracted and confused and now I am completly Lost.
	My friend hasn't yet helped me with the review yet and the whole architecture is a complete mess.
	Maybe I should just focus on implementing the GUI and later do the refactoring. That sounds resonable I should do it that way.
		Alright.. About the GUI, There has to be 4 container, the container are called Frames and that containers are to be placed 
	in the window. The window has attributes as well as the Labels and Buttons that are to be placed in the Windows or the Frames, as I said.
	Later on that Labels are to be configured so that they have a more aesthetic outlook. But that is to be done when they are implemented.
	I am about to use a Grid Layout which is provided by the Grid Layout Manager, which again has to be configured properly.
	The Labels should represent the Cards on the Table Stack and the Deck and the Computer Players Hand. 
	On the oder hand the human players card will be buttons, so the user can pick them and put them on the Table Stack.
		OK That should be it for now. Time To Tinker with Tkinter.

Fifth entry:
	The visual representation of the GUI Interface stands but it is not interactive yet.
	Plus the console interface and the game algorithms are completly fucked.
	I need to write a useful Interface Class that will help to integrate both the GUI and the Text Input thing. I don't have a clue how though.
	There are lots of functions that don't do anything and are useless because of that. 
	I don't think that I will be able to make a modular app that can use both console and GUI because it is just behaves so completly different from
	each other, so I will just make a the GUI run for now.
